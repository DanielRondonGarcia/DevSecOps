# k8s/service.yml
apiVersion: v1
kind: Service
metadata:
  # Este nombre debe coincidir con el que pusiste en ingress.yml
  name: devsecops-app-service
  namespace: devsecops
  annotations:
    # Anotaciones de seguridad para el servicio
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    # Política de red para restringir el tráfico
    networking.gke.io/load-balancer-type: "Internal"
spec:
  # Este 'selector' es la parte más importante.
  # Le dice al Service qué Pods debe gestionar.
  # Debe coincidir exactamente con la etiqueta de tus Pods en deployment.yml.
  selector:
    app: devsecops-app
  
  # ClusterIP es el tipo de servicio por defecto.
  # Crea una IP interna estable solo accesible desde dentro del clúster.
  # Es perfecto porque no queremos exponerlo directamente, para eso está el Ingress.
  type: ClusterIP
  
  ports:
  - name: http
    protocol: TCP
    # El puerto en el que el Service escuchará (la "extensión interna")
    port: 80
    # El puerto al que el Service enviará el tráfico (el puerto de tu contenedor Node.js)
    targetPort: 3000